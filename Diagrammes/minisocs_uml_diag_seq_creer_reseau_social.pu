@startuml
'Diagramme de sÃ©quence (PlantUML)'

'Configuration charte graphique'
hide footbox
skinparam sequenceParticipantBackgroundColor White
skinparam sequenceActorBackgroundColor White

'DÃ©claration des acteurs et des participants'
actor "--:utilisateur:--" as u
participant "--:MiniSocs:--" as m
participant "--:Utilisateur:--" as ui
participant "--:ReseauSocial:--" as r
participant "--:Membre:--" as me

u -> m: creerReseauSocial(pseudonymeUtilisateur,pseudonymeMembre,nomReseau)
alt pseudonymeUtilisateur!=null && pseudonymeUtilisateur!=vide && pseudonymeMembre!=null && pseudonymeMembre!=vide && nomReseau!=null && nomReseau!=vide
    m -> m: r = chercherReseauSocial(nomReseau)
    return
    alt r==null
        m -> ui: u = chercherUtilisateur(pseudonyme)
        return
        alt u!=null
            ' Modification: getEtatCompte() is now called on MiniSocs'
            m -> m: etat = getEtatCompte(u)
            return
            alt etat==ACTIF
                create "--:ReseauSocial:--" as R
                m -> R: r=creerReseauSocial(nomReseau,true)
                return
                m -> me: me = creerMembre(pseudonymeMembre,true,r)
                return
                ' Modification: ajouterMembre() is now shown as being initiated by MiniSocs'
                m -> r: ajouterMembre(me)
                return
                ' User subscribes to the ReseauSocial's publisher'
                ui -> r: souscrirePublisher()
                r -> r: registerSubscriber(ui)
                return
            end
        end
    end
end

@enduml

